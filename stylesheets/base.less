@import "syntax-variables";

.editor-colors {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
}

.editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

.comment {
  color: @comment;
}

.entity {
  &.name.type {
    color: @keyword;
    text-decoration: none !important; // underline
  }

  &.other.inherited-class {
    color: @keyword;
    font-style: italic;
    text-decoration: none !important; // underline
  }
}

.keyword {
  color: @keyword;

  &.control {
    color: @keyword;
  }

  &.operator {
    color: @keyword;
  }

  &.other.special-method {
    color: @keyword;
  }

  &.other.unit {
    color: @keyword;
  }
}

/* var, const, class */
.storage {
  color: @string;
}

.constant {
  color: @constant;

  &.character.escape {
    color: @cyan;
  }

  &.numeric {
    color: @number;
  }

  &.other.color {
    color: @cyan;
  }

  &.other.symbol {
    color: @keyword;
  }
}

.variable {
  color: @variable;

  &.interpolation {
    color: darken(@variable, 10%);
  }

  &.parameter.function {
    color: @function-argument;
  }
}

.invalid.illegal {
  background-color: @keyword;
  color: @string;
}

.string {
  color: @string;


  &.regexp {
    color: @number;

    .source.ruby.embedded {
      color: @number;
    }
  }

  &.other.link {
    color: @blue;
  }
}

.punctuation {
  &.definition {
    &.comment {
      color: @foreground;
    }

    &.string,
    &.variable,
    &.parameters,
    &.array {
      color: @foreground;
    }

    &.heading,
    &.identity {
      color: @keyword;
    }

    &.bold {
      color: @light-orange;
      font-style: bold;
    }

    &.italic {
      color: @string;
      font-style: italic;
    }
  }

  &.section.embedded {
    color: @foreground;
  }

}

/* JSX html <View/> */
.support {
  &.class {
    color: @keyword;
  }

  &.function  {
    color: @keyword;

    &.any-method {
      color: @function-name;
    }
  }
}

.entity {
  /* Class function */
  &.name.function {
    color: @function-name;
  }

  &.name.class, &.name.type.class {
    color: @class-name;
  }

  &.name.section {
    color: @keyword;
  }

  &.name.tag {
    color: @foreground;
    text-decoration: none !important; // underline
  }

  &.other.attribute-name {
    color: @function-name;

    &.id {
      color: @function-name;
    }
  }
}

.meta {
  &.class {
    color: @foreground;
  }

  &.link {
    color: @blue;
  }

  &.require {
    color: @blue;
  }

  &.selector {
    color: @foreground;
  }

  &.separator {
    background-color: @gray;
    color: @syntax-text-color;
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    color: @string;
    font-weight: bold;
  }

  &.changed {
    color: @string;
  }

  &.deleted {
    color: @red;
  }

  &.italic {
    color: @string;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @blue;
  }

  &.inserted {
    color: @green;
  }

  &.list {
    color: @red;
  }

  &.quote {
    color: @orange;
  }

  &.raw.inline {
    color: @green;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @green;
  }
}

.editor.mini .scroll-view {
  padding-left: 1px;
}
